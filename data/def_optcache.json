[
{"word": "aleph",
"menu": "'al'	    ASCII code of the letter Aleph (Hebrew)",
"info": "'al'	    ASCII code of the letter Aleph (Hebrew)",
},
{"word": "allowrevins",
"menu": "'ari'     allow CTRL-_ in Insert and Command-line mode",
"info": "'ari'     allow CTRL-_ in Insert and Command-line mode",
},
{"word": "altkeymap",
"menu": "'akm'     for default second language (Farsi/Hebrew)",
"info": "'akm'     for default second language (Farsi/Hebrew)",
},
{"word": "ambiwidth",
"menu": "'ambw'    what to do with Unicode chars of ambiguous width",
"info": "'ambw'    what to do with Unicode chars of ambiguous width",
},
{"word": "antialias",
"menu": "'anti'    Mac OS X: use smooth, antialiased fonts",
"info": "'anti'    Mac OS X: use smooth, antialiased fonts",
},
{"word": "autochdir",
"menu": "'acd'     change directory to the file in the current window",
"info": "'acd'     change directory to the file in the current window",
},
{"word": "arabic",
"menu": "'arab'    for Arabic as a default second language",
"info": "'arab'    for Arabic as a default second language",
},
{"word": "arabicshape",
"menu": "'arshape' do shaping for Arabic characters",
"info": "'arshape' do shaping for Arabic characters",
},
{"word": "autoindent",
"menu": "'ai'	    take indent for new line from previous line",
"info": "'ai'	    take indent for new line from previous line",
},
{"word": "autoread",
"menu": "'ar'	    autom. read file when changed outside of Vim",
"info": "'ar'	    autom. read file when changed outside of Vim",
},
{"word": "autowrite",
"menu": "'aw'	    automatically write file if changed",
"info": "'aw'	    automatically write file if changed",
},
{"word": "autowriteall",
"menu": "'awa'     as 'autowrite', but works with more commands",
"info": "'awa'     as 'autowrite', but works with more commands",
},
{"word": "background",
"menu": "'bg'	    \"dark\" or \"light\", used for highlight colors",
"info": "'bg'	    \"dark\" or \"light\", used for highlight colors",
},
{"word": "backspace",
"menu": "'bs'	    how backspace works at start of line",
"info": "'bs'	    how backspace works at start of line",
},
{"word": "backup",
"menu": "'bk'	    keep backup file after overwriting a file",
"info": "'bk'	    keep backup file after overwriting a file",
},
{"word": "backupcopy",
"menu": "'bkc'     make backup as a copy, don't rename the file",
"info": "'bkc'     make backup as a copy, don't rename the file",
},
{"word": "backupdir",
"menu": "'bdir'    list of directories for the backup file",
"info": "'bdir'    list of directories for the backup file",
},
{"word": "backupext",
"menu": "'bex'     extension used for the backup file",
"info": "'bex'     extension used for the backup file",
},
{"word": "backupskip",
"menu": "'bsk'     no backup for files that match these patterns",
"info": "'bsk'     no backup for files that match these patterns",
},
{"word": "balloondelay",
"menu": "'bdlay'   delay in mS before a balloon may pop up",
"info": "'bdlay'   delay in mS before a balloon may pop up",
},
{"word": "ballooneval",
"menu": "'beval'   switch on balloon evaluation",
"info": "'beval'   switch on balloon evaluation",
},
{"word": "balloonexpr",
"menu": "'bexpr'   expression to show in balloon",
"info": "'bexpr'   expression to show in balloon",
},
{"word": "belloff",
"menu": "'bo'	    do not ring the bell for these reasons",
"info": "'bo'	    do not ring the bell for these reasons",
},
{"word": "binary",
"menu": "'bin'     read/write/edit file in binary mode",
"info": "'bin'     read/write/edit file in binary mode",
},
{"word": "bioskey",
"menu": "'biosk'   MS-DOS: use bios calls for input characters",
"info": "'biosk'   MS-DOS: use bios calls for input characters",
},
{"word": "bomb",
"menu": "prepend a Byte Order Mark to the file",
"info": "prepend a Byte Order Mark to the file",
},
{"word": "breakat",
"menu": "'brk'     characters that may cause a line break",
"info": "'brk'     characters that may cause a line break",
},
{"word": "breakindent",
"menu": "'bri'     wrapped line repeats indent ",
"info": "'bri'     wrapped line repeats indent ",
},
{"word": "breakindentopt",
"menu": "'briopt'  settings for 'breakindent'",
"info": "'briopt'  settings for 'breakindent'",
},
{"word": "browsedir",
"menu": "'bsdir'   which directory to start browsing in",
"info": "'bsdir'   which directory to start browsing in",
},
{"word": "bufhidden",
"menu": "'bh'	    what to do when buffer is no longer in window",
"info": "'bh'	    what to do when buffer is no longer in window",
},
{"word": "buflisted",
"menu": "'bl'	    whether the buffer shows up in the buffer list",
"info": "'bl'	    whether the buffer shows up in the buffer list",
},
{"word": "buftype",
"menu": "'bt'	    special type of buffer",
"info": "'bt'	    special type of buffer",
},
{"word": "casemap",
"menu": "'cmp'     specifies how case of letters is changed",
"info": "'cmp'     specifies how case of letters is changed",
},
{"word": "cdpath",
"menu": "'cd'	    list of directories searched with \":cd\"",
"info": "'cd'	    list of directories searched with \":cd\"",
},
{"word": "cedit",
"menu": "key used to open the command-line window",
"info": "key used to open the command-line window",
},
{"word": "charconvert",
"menu": "'ccv'     expression for character encoding conversion",
"info": "'ccv'     expression for character encoding conversion",
},
{"word": "cindent",
"menu": "'cin'     do C program indenting",
"info": "'cin'     do C program indenting",
},
{"word": "cinkeys",
"menu": "'cink'    keys that trigger indent when 'cindent' is set",
"info": "'cink'    keys that trigger indent when 'cindent' is set",
},
{"word": "cinoptions",
"menu": "'cino'    how to do indenting when 'cindent' is set",
"info": "'cino'    how to do indenting when 'cindent' is set",
},
{"word": "cinwords",
"menu": "'cinw'    words where 'si' and 'cin' add an indent",
"info": "'cinw'    words where 'si' and 'cin' add an indent",
},
{"word": "clipboard",
"menu": "'cb'	    use the clipboard as the unnamed register",
"info": "'cb'	    use the clipboard as the unnamed register",
},
{"word": "cmdheight",
"menu": "'ch'	    number of lines to use for the command-line",
"info": "'ch'	    number of lines to use for the command-line",
},
{"word": "cmdwinheight",
"menu": "'cwh'     height of the command-line window",
"info": "'cwh'     height of the command-line window",
},
{"word": "colorcolumn",
"menu": "'cc'	    columns to highlight",
"info": "'cc'	    columns to highlight",
},
{"word": "columns",
"menu": "'co'	    number of columns in the display",
"info": "'co'	    number of columns in the display",
},
{"word": "comments",
"menu": "'com'     patterns that can start a comment line",
"info": "'com'     patterns that can start a comment line",
},
{"word": "commentstring",
"menu": "'cms'     template for comments; used for fold marker",
"info": "'cms'     template for comments; used for fold marker",
},
{"word": "compatible",
"menu": "'cp'	    behave Vi-compatible as much as possible",
"info": "'cp'	    behave Vi-compatible as much as possible",
},
{"word": "complete",
"menu": "'cpt'     specify how Insert mode completion works",
"info": "'cpt'     specify how Insert mode completion works",
},
{"word": "completefunc",
"menu": "'cfu'     function to be used for Insert mode completion",
"info": "'cfu'     function to be used for Insert mode completion",
},
{"word": "completeopt",
"menu": "'cot'     options for Insert mode completion",
"info": "'cot'     options for Insert mode completion",
},
{"word": "concealcursor",
"menu": "'cocu'    whether concealable text is hidden in cursor line",
"info": "'cocu'    whether concealable text is hidden in cursor line",
},
{"word": "conceallevel",
"menu": "'cole'    whether concealable text is shown or hidden",
"info": "'cole'    whether concealable text is shown or hidden",
},
{"word": "confirm",
"menu": "'cf'	    ask what to do about unsaved/read-only files",
"info": "'cf'	    ask what to do about unsaved/read-only files",
},
{"word": "conskey",
"menu": "'consk'   get keys directly from console (MS-DOS only)",
"info": "'consk'   get keys directly from console (MS-DOS only)",
},
{"word": "copyindent",
"menu": "'ci'	    make 'autoindent' use existing indent structure",
"info": "'ci'	    make 'autoindent' use existing indent structure",
},
{"word": "cpoptions",
"menu": "'cpo'     flags for Vi-compatible behavior",
"info": "'cpo'     flags for Vi-compatible behavior",
},
{"word": "cryptmethod",
"menu": "'cm'	    type of encryption to use for file writing",
"info": "'cm'	    type of encryption to use for file writing",
},
{"word": "cscopepathcomp",
"menu": "'cspc'    how many components of the path to show",
"info": "'cspc'    how many components of the path to show",
},
{"word": "cscopeprg",
"menu": "'csprg'   command to execute cscope",
"info": "'csprg'   command to execute cscope",
},
{"word": "cscopequickfix",
"menu": "'csqf'    use quickfix window for cscope results",
"info": "'csqf'    use quickfix window for cscope results",
},
{"word": "cscoperelative",
"menu": "'csre'    Use cscope.out path basename as prefix",
"info": "'csre'    Use cscope.out path basename as prefix",
},
{"word": "cscopetag",
"menu": "'cst'     use cscope for tag commands",
"info": "'cst'     use cscope for tag commands",
},
{"word": "cscopetagorder",
"menu": "'csto'    determines \":cstag\" search order",
"info": "'csto'    determines \":cstag\" search order",
},
{"word": "cscopeverbose",
"menu": "'csverb'  give messages when adding a cscope database",
"info": "'csverb'  give messages when adding a cscope database",
},
{"word": "cursorbind",
"menu": "'crb'     move cursor in window as it moves in other windows",
"info": "'crb'     move cursor in window as it moves in other windows",
},
{"word": "cursorcolumn",
"menu": "'cuc'	    highlight the screen column of the cursor",
"info": "'cuc'	    highlight the screen column of the cursor",
},
{"word": "cursorline",
"menu": "'cul'	    highlight the screen line of the cursor",
"info": "'cul'	    highlight the screen line of the cursor",
},
{"word": "debug",
"menu": "set to \"msg\" to see all error messages",
"info": "set to \"msg\" to see all error messages",
},
{"word": "define",
"menu": "'def'     pattern to be used to find a macro definition",
"info": "'def'     pattern to be used to find a macro definition",
},
{"word": "delcombine",
"menu": "'deco'    delete combining characters on their own",
"info": "'deco'    delete combining characters on their own",
},
{"word": "dictionary",
"menu": "'dict'    list of file names used for keyword completion",
"info": "'dict'    list of file names used for keyword completion",
},
{"word": "diff",
"menu": "use diff mode for the current window",
"info": "use diff mode for the current window",
},
{"word": "diffexpr",
"menu": "'dex'     expression used to obtain a diff file",
"info": "'dex'     expression used to obtain a diff file",
},
{"word": "diffopt",
"menu": "'dip'     options for using diff mode",
"info": "'dip'     options for using diff mode",
},
{"word": "digraph",
"menu": "'dg'	    enable the entering of digraphs in Insert mode",
"info": "'dg'	    enable the entering of digraphs in Insert mode",
},
{"word": "directory",
"menu": "'dir'     list of directory names for the swap file",
"info": "'dir'     list of directory names for the swap file",
},
{"word": "display",
"menu": "'dy'	    list of flags for how to display text",
"info": "'dy'	    list of flags for how to display text",
},
{"word": "eadirection",
"menu": "'ead'     in which direction 'equalalways' works",
"info": "'ead'     in which direction 'equalalways' works",
},
{"word": "edcompatible",
"menu": "'ed'	    toggle flags of \":substitute\" command",
"info": "'ed'	    toggle flags of \":substitute\" command",
},
{"word": "emoji",
"menu": "'emo'	    emoji characters are considered full width",
"info": "'emo'	    emoji characters are considered full width",
},
{"word": "encoding",
"menu": "'enc'     encoding used internally",
"info": "'enc'     encoding used internally",
},
{"word": "endofline",
"menu": "'eol'     write <EOL> for last line in file",
"info": "'eol'     write <EOL> for last line in file",
},
{"word": "equalalways",
"menu": "'ea'	    windows are automatically made the same size",
"info": "'ea'	    windows are automatically made the same size",
},
{"word": "equalprg",
"menu": "'ep'	    external program to use for \"=\" command",
"info": "'ep'	    external program to use for \"=\" command",
},
{"word": "errorbells",
"menu": "'eb'	    ring the bell for error messages",
"info": "'eb'	    ring the bell for error messages",
},
{"word": "errorfile",
"menu": "'ef'	    name of the errorfile for the QuickFix mode",
"info": "'ef'	    name of the errorfile for the QuickFix mode",
},
{"word": "errorformat",
"menu": "'efm'     description of the lines in the error file",
"info": "'efm'     description of the lines in the error file",
},
{"word": "esckeys",
"menu": "'ek'	    recognize function keys in Insert mode",
"info": "'ek'	    recognize function keys in Insert mode",
},
{"word": "eventignore",
"menu": "'ei'	    autocommand events that are ignored",
"info": "'ei'	    autocommand events that are ignored",
},
{"word": "expandtab",
"menu": "'et'	    use spaces when <Tab> is inserted",
"info": "'et'	    use spaces when <Tab> is inserted",
},
{"word": "exrc",
"menu": "'ex'	    read .vimrc and .exrc in the current directory",
"info": "'ex'	    read .vimrc and .exrc in the current directory",
},
{"word": "fileencoding",
"menu": "'fenc'    file encoding for multi-byte text",
"info": "'fenc'    file encoding for multi-byte text",
},
{"word": "fileencodings",
"menu": "'fencs'   automatically detected character encodings",
"info": "'fencs'   automatically detected character encodings",
},
{"word": "fileformat",
"menu": "'ff'	    file format used for file I/O",
"info": "'ff'	    file format used for file I/O",
},
{"word": "fileformats",
"menu": "'ffs'     automatically detected values for 'fileformat'",
"info": "'ffs'     automatically detected values for 'fileformat'",
},
{"word": "fileignorecase",
"menu": "'fic'     ignore case when using file names",
"info": "'fic'     ignore case when using file names",
},
{"word": "filetype",
"menu": "'ft'	    type of file, used for autocommands",
"info": "'ft'	    type of file, used for autocommands",
},
{"word": "fillchars",
"menu": "'fcs'     characters to use for displaying special items",
"info": "'fcs'     characters to use for displaying special items",
},
{"word": "fixendofline",
"menu": "'fixeol'  make sure last line in file has <EOL>",
"info": "'fixeol'  make sure last line in file has <EOL>",
},
{"word": "fkmap",
"menu": "'fk'	    Farsi keyboard mapping",
"info": "'fk'	    Farsi keyboard mapping",
},
{"word": "foldclose",
"menu": "'fcl'     close a fold when the cursor leaves it",
"info": "'fcl'     close a fold when the cursor leaves it",
},
{"word": "foldcolumn",
"menu": "'fdc'     width of the column used to indicate folds",
"info": "'fdc'     width of the column used to indicate folds",
},
{"word": "foldenable",
"menu": "'fen'     set to display all folds open",
"info": "'fen'     set to display all folds open",
},
{"word": "foldexpr",
"menu": "'fde'     expression used when 'foldmethod' is \"expr\"",
"info": "'fde'     expression used when 'foldmethod' is \"expr\"",
},
{"word": "foldignore",
"menu": "'fdi'     ignore lines when 'foldmethod' is \"indent\"",
"info": "'fdi'     ignore lines when 'foldmethod' is \"indent\"",
},
{"word": "foldlevel",
"menu": "'fdl'     close folds with a level higher than this",
"info": "'fdl'     close folds with a level higher than this",
},
{"word": "foldlevelstart",
"menu": "'fdls'    'foldlevel' when starting to edit a file",
"info": "'fdls'    'foldlevel' when starting to edit a file",
},
{"word": "foldmarker",
"menu": "'fmr'     markers used when 'foldmethod' is \"marker\"",
"info": "'fmr'     markers used when 'foldmethod' is \"marker\"",
},
{"word": "foldmethod",
"menu": "'fdm'     folding type",
"info": "'fdm'     folding type",
},
{"word": "foldminlines",
"menu": "'fml'     minimum number of lines for a fold to be closed",
"info": "'fml'     minimum number of lines for a fold to be closed",
},
{"word": "foldnestmax",
"menu": "'fdn'     maximum fold depth",
"info": "'fdn'     maximum fold depth",
},
{"word": "foldopen",
"menu": "'fdo'     for which commands a fold will be opened",
"info": "'fdo'     for which commands a fold will be opened",
},
{"word": "foldtext",
"menu": "'fdt'     expression used to display for a closed fold",
"info": "'fdt'     expression used to display for a closed fold",
},
{"word": "formatexpr",
"menu": "'fex'     expression used with \"gq\" command",
"info": "'fex'     expression used with \"gq\" command",
},
{"word": "formatlistpat",
"menu": "'flp'     pattern used to recognize a list header",
"info": "'flp'     pattern used to recognize a list header",
},
{"word": "formatoptions",
"menu": "'fo'	    how automatic formatting is to be done",
"info": "'fo'	    how automatic formatting is to be done",
},
{"word": "formatprg",
"menu": "'fp'	    name of external program used with \"gq\" command",
"info": "'fp'	    name of external program used with \"gq\" command",
},
{"word": "fsync",
"menu": "'fs'	    whether to invoke fsync() after file write",
"info": "'fs'	    whether to invoke fsync() after file write",
},
{"word": "gdefault",
"menu": "'gd'	    the \":substitute\" flag 'g' is default on",
"info": "'gd'	    the \":substitute\" flag 'g' is default on",
},
{"word": "grepformat",
"menu": "'gfm'     format of 'grepprg' output",
"info": "'gfm'     format of 'grepprg' output",
},
{"word": "grepprg",
"menu": "'gp'	    program to use for \":grep\"",
"info": "'gp'	    program to use for \":grep\"",
},
{"word": "guicursor",
"menu": "'gcr'     GUI: settings for cursor shape and blinking",
"info": "'gcr'     GUI: settings for cursor shape and blinking",
},
{"word": "guifont",
"menu": "'gfn'     GUI: Name(s) of font(s) to be used",
"info": "'gfn'     GUI: Name(s) of font(s) to be used",
},
{"word": "guifontset",
"menu": "'gfs'     GUI: Names of multi-byte fonts to be used",
"info": "'gfs'     GUI: Names of multi-byte fonts to be used",
},
{"word": "guifontwide",
"menu": "'gfw'     list of font names for double-wide characters",
"info": "'gfw'     list of font names for double-wide characters",
},
{"word": "guiheadroom",
"menu": "'ghr'     GUI: pixels room for window decorations",
"info": "'ghr'     GUI: pixels room for window decorations",
},
{"word": "guioptions",
"menu": "'go'	    GUI: Which components and options are used",
"info": "'go'	    GUI: Which components and options are used",
},
{"word": "guipty",
"menu": "GUI: try to use a pseudo-tty for \":!\" commands",
"info": "GUI: try to use a pseudo-tty for \":!\" commands",
},
{"word": "guitablabel",
"menu": "'gtl'     GUI: custom label for a tab page",
"info": "'gtl'     GUI: custom label for a tab page",
},
{"word": "guitabtooltip",
"menu": "'gtt'     GUI: custom tooltip for a tab page",
"info": "'gtt'     GUI: custom tooltip for a tab page",
},
{"word": "helpfile",
"menu": "'hf'	    full path name of the main help file",
"info": "'hf'	    full path name of the main help file",
},
{"word": "helpheight",
"menu": "'hh'	    minimum height of a new help window",
"info": "'hh'	    minimum height of a new help window",
},
{"word": "helplang",
"menu": "'hlg'     preferred help languages",
"info": "'hlg'     preferred help languages",
},
{"word": "hidden",
"menu": "'hid'     don't unload buffer when it is |abandon|ed",
"info": "'hid'     don't unload buffer when it is |abandon|ed",
},
{"word": "highlight",
"menu": "'hl'	    sets highlighting mode for various occasions",
"info": "'hl'	    sets highlighting mode for various occasions",
},
{"word": "history",
"menu": "'hi'	    number of command-lines that are remembered",
"info": "'hi'	    number of command-lines that are remembered",
},
{"word": "hkmap",
"menu": "'hk'	    Hebrew keyboard mapping",
"info": "'hk'	    Hebrew keyboard mapping",
},
{"word": "hkmapp",
"menu": "'hkp'     phonetic Hebrew keyboard mapping",
"info": "'hkp'     phonetic Hebrew keyboard mapping",
},
{"word": "hlsearch",
"menu": "'hls'     highlight matches with last search pattern",
"info": "'hls'     highlight matches with last search pattern",
},
{"word": "icon",
"menu": "let Vim set the text of the window icon",
"info": "let Vim set the text of the window icon",
},
{"word": "iconstring",
"menu": "string to use for the Vim icon text",
"info": "string to use for the Vim icon text",
},
{"word": "ignorecase",
"menu": "'ic'	    ignore case in search patterns",
"info": "'ic'	    ignore case in search patterns",
},
{"word": "imactivatefunc",
"menu": "'imaf'    function to enable/disable the X input method",
"info": "'imaf'    function to enable/disable the X input method",
},
{"word": "imactivatekey",
"menu": "'imak'    key that activates the X input method",
"info": "'imak'    key that activates the X input method",
},
{"word": "imcmdline",
"menu": "'imc'     use IM when starting to edit a command line",
"info": "'imc'     use IM when starting to edit a command line",
},
{"word": "imdisable",
"menu": "'imd'     do not use the IM in any mode",
"info": "'imd'     do not use the IM in any mode",
},
{"word": "iminsert",
"menu": "'imi'     use :lmap or IM in Insert mode",
"info": "'imi'     use :lmap or IM in Insert mode",
},
{"word": "imsearch",
"menu": "'ims'     use :lmap or IM when typing a search pattern",
"info": "'ims'     use :lmap or IM when typing a search pattern",
},
{"word": "imstatusfunc",
"menu": "'imsf'    function to obtain X input method status",
"info": "'imsf'    function to obtain X input method status",
},
{"word": "imstyle",
"menu": "'imst'    specifies the input style of the input method",
"info": "'imst'    specifies the input style of the input method",
},
{"word": "include",
"menu": "'inc'     pattern to be used to find an include file",
"info": "'inc'     pattern to be used to find an include file",
},
{"word": "includeexpr",
"menu": "'inex'    expression used to process an include line",
"info": "'inex'    expression used to process an include line",
},
{"word": "incsearch",
"menu": "'is'	    highlight match while typing search pattern",
"info": "'is'	    highlight match while typing search pattern",
},
{"word": "indentexpr",
"menu": "'inde'    expression used to obtain the indent of a line",
"info": "'inde'    expression used to obtain the indent of a line",
},
{"word": "indentkeys",
"menu": "'indk'    keys that trigger indenting with 'indentexpr'",
"info": "'indk'    keys that trigger indenting with 'indentexpr'",
},
{"word": "infercase",
"menu": "'inf'     adjust case of match for keyword completion",
"info": "'inf'     adjust case of match for keyword completion",
},
{"word": "insertmode",
"menu": "'im'	    start the edit of a file in Insert mode",
"info": "'im'	    start the edit of a file in Insert mode",
},
{"word": "isfname",
"menu": "'isf'     characters included in file names and pathnames",
"info": "'isf'     characters included in file names and pathnames",
},
{"word": "isident",
"menu": "'isi'     characters included in identifiers",
"info": "'isi'     characters included in identifiers",
},
{"word": "iskeyword",
"menu": "'isk'     characters included in keywords",
"info": "'isk'     characters included in keywords",
},
{"word": "isprint",
"menu": "'isp'     printable characters",
"info": "'isp'     printable characters",
},
{"word": "joinspaces",
"menu": "'js'	    two spaces after a period with a join command",
"info": "'js'	    two spaces after a period with a join command",
},
{"word": "key",
"menu": "encryption key",
"info": "encryption key",
},
{"word": "keymap",
"menu": "'kmp'     name of a keyboard mapping",
"info": "'kmp'     name of a keyboard mapping",
},
{"word": "keymodel",
"menu": "'km'	    enable starting/stopping selection with keys",
"info": "'km'	    enable starting/stopping selection with keys",
},
{"word": "keywordprg",
"menu": "'kp'	    program to use for the \"K\" command",
"info": "'kp'	    program to use for the \"K\" command",
},
{"word": "langmap",
"menu": "'lmap'    alphabetic characters for other language mode",
"info": "'lmap'    alphabetic characters for other language mode",
},
{"word": "langmenu",
"menu": "'lm'	    language to be used for the menus",
"info": "'lm'	    language to be used for the menus",
},
{"word": "langremap",
"menu": "'lrm'	    do apply 'langmap' to mapped characters",
"info": "'lrm'	    do apply 'langmap' to mapped characters",
},
{"word": "laststatus",
"menu": "'ls'	    tells when last window has status lines",
"info": "'ls'	    tells when last window has status lines",
},
{"word": "lazyredraw",
"menu": "'lz'	    don't redraw while executing macros",
"info": "'lz'	    don't redraw while executing macros",
},
{"word": "linebreak",
"menu": "'lbr'     wrap long lines at a blank",
"info": "'lbr'     wrap long lines at a blank",
},
{"word": "lines",
"menu": "number of lines in the display",
"info": "number of lines in the display",
},
{"word": "linespace",
"menu": "'lsp'     number of pixel lines to use between characters",
"info": "'lsp'     number of pixel lines to use between characters",
},
{"word": "lisp",
"menu": "automatic indenting for Lisp",
"info": "automatic indenting for Lisp",
},
{"word": "lispwords",
"menu": "'lw'	    words that change how lisp indenting works",
"info": "'lw'	    words that change how lisp indenting works",
},
{"word": "list",
"menu": "show <Tab> and <EOL>",
"info": "show <Tab> and <EOL>",
},
{"word": "listchars",
"menu": "'lcs'     characters for displaying in list mode",
"info": "'lcs'     characters for displaying in list mode",
},
{"word": "loadplugins",
"menu": "'lpl'     load plugin scripts when starting up",
"info": "'lpl'     load plugin scripts when starting up",
},
{"word": "luadll",
"menu": "name of the Lua dynamic library",
"info": "name of the Lua dynamic library",
},
{"word": "macatsui",
"menu": "Mac GUI: use ATSUI text drawing",
"info": "Mac GUI: use ATSUI text drawing",
},
{"word": "magic",
"menu": "changes special characters in search patterns",
"info": "changes special characters in search patterns",
},
{"word": "makeef",
"menu": "'mef'     name of the errorfile for \":make\"",
"info": "'mef'     name of the errorfile for \":make\"",
},
{"word": "makeencoding",
"menu": "'menc'    encoding of external make/grep commands",
"info": "'menc'    encoding of external make/grep commands",
},
{"word": "makeprg",
"menu": "'mp'	    program to use for the \":make\" command",
"info": "'mp'	    program to use for the \":make\" command",
},
{"word": "matchpairs",
"menu": "'mps'     pairs of characters that \"%\" can match",
"info": "'mps'     pairs of characters that \"%\" can match",
},
{"word": "matchtime",
"menu": "'mat'     tenths of a second to show matching paren",
"info": "'mat'     tenths of a second to show matching paren",
},
{"word": "maxcombine",
"menu": "'mco'     maximum nr of combining characters displayed",
"info": "'mco'     maximum nr of combining characters displayed",
},
{"word": "maxfuncdepth",
"menu": "'mfd'     maximum recursive depth for user functions",
"info": "'mfd'     maximum recursive depth for user functions",
},
{"word": "maxmapdepth",
"menu": "'mmd'     maximum recursive depth for mapping",
"info": "'mmd'     maximum recursive depth for mapping",
},
{"word": "maxmem",
"menu": "'mm'	    maximum memory (in Kbyte) used for one buffer",
"info": "'mm'	    maximum memory (in Kbyte) used for one buffer",
},
{"word": "maxmempattern",
"menu": "'mmp'     maximum memory (in Kbyte) used for pattern search",
"info": "'mmp'     maximum memory (in Kbyte) used for pattern search",
},
{"word": "maxmemtot",
"menu": "'mmt'     maximum memory (in Kbyte) used for all buffers",
"info": "'mmt'     maximum memory (in Kbyte) used for all buffers",
},
{"word": "menuitems",
"menu": "'mis'     maximum number of items in a menu",
"info": "'mis'     maximum number of items in a menu",
},
{"word": "mkspellmem",
"menu": "'msm'     memory used before |:mkspell| compresses the tree",
"info": "'msm'     memory used before |:mkspell| compresses the tree",
},
{"word": "modeline",
"menu": "'ml'	    recognize modelines at start or end of file",
"info": "'ml'	    recognize modelines at start or end of file",
},
{"word": "modelines",
"menu": "'mls'     number of lines checked for modelines",
"info": "'mls'     number of lines checked for modelines",
},
{"word": "modifiable",
"menu": "'ma'	    changes to the text are not possible",
"info": "'ma'	    changes to the text are not possible",
},
{"word": "modified",
"menu": "'mod'     buffer has been modified",
"info": "'mod'     buffer has been modified",
},
{"word": "more",
"menu": "pause listings when the whole screen is filled",
"info": "pause listings when the whole screen is filled",
},
{"word": "mouse",
"menu": "enable the use of mouse clicks",
"info": "enable the use of mouse clicks",
},
{"word": "mousefocus",
"menu": "'mousef'  keyboard focus follows the mouse",
"info": "'mousef'  keyboard focus follows the mouse",
},
{"word": "mousehide",
"menu": "'mh'	    hide mouse pointer while typing",
"info": "'mh'	    hide mouse pointer while typing",
},
{"word": "mousemodel",
"menu": "'mousem'  changes meaning of mouse buttons",
"info": "'mousem'  changes meaning of mouse buttons",
},
{"word": "mouseshape",
"menu": "'mouses'  shape of the mouse pointer in different modes",
"info": "'mouses'  shape of the mouse pointer in different modes",
},
{"word": "mousetime",
"menu": "'mouset'  max time between mouse double-click",
"info": "'mouset'  max time between mouse double-click",
},
{"word": "mzquantum",
"menu": "'mzq'     the interval between polls for MzScheme threads",
"info": "'mzq'     the interval between polls for MzScheme threads",
},
{"word": "nrformats",
"menu": "'nf'	    number formats recognized for CTRL-A command",
"info": "'nf'	    number formats recognized for CTRL-A command",
},
{"word": "number",
"menu": "'nu'	    print the line number in front of each line",
"info": "'nu'	    print the line number in front of each line",
},
{"word": "numberwidth",
"menu": "'nuw'     number of columns used for the line number",
"info": "'nuw'     number of columns used for the line number",
},
{"word": "omnifunc",
"menu": "'ofu'     function for filetype-specific completion",
"info": "'ofu'     function for filetype-specific completion",
},
{"word": "opendevice",
"menu": "'odev'    allow reading/writing devices on MS-Windows",
"info": "'odev'    allow reading/writing devices on MS-Windows",
},
{"word": "operatorfunc",
"menu": "'opfunc'  function to be called for |g@| operator",
"info": "'opfunc'  function to be called for |g@| operator",
},
{"word": "osfiletype",
"menu": "'oft'     no longer supported",
"info": "'oft'     no longer supported",
},
{"word": "packpath",
"menu": "'pp'      list of directories used for packages",
"info": "'pp'      list of directories used for packages",
},
{"word": "paragraphs",
"menu": "'para'    nroff macros that separate paragraphs",
"info": "'para'    nroff macros that separate paragraphs",
},
{"word": "paste",
"menu": "allow pasting text",
"info": "allow pasting text",
},
{"word": "pastetoggle",
"menu": "'pt'	    key code that causes 'paste' to toggle",
"info": "'pt'	    key code that causes 'paste' to toggle",
},
{"word": "patchexpr",
"menu": "'pex'     expression used to patch a file",
"info": "'pex'     expression used to patch a file",
},
{"word": "patchmode",
"menu": "'pm'	    keep the oldest version of a file",
"info": "'pm'	    keep the oldest version of a file",
},
{"word": "path",
"menu": "'pa'	    list of directories searched with \"gf\" et.al.",
"info": "'pa'	    list of directories searched with \"gf\" et.al.",
},
{"word": "perldll",
"menu": "name of the Perl dynamic library",
"info": "name of the Perl dynamic library",
},
{"word": "preserveindent",
"menu": "'pi'	    preserve the indent structure when reindenting",
"info": "'pi'	    preserve the indent structure when reindenting",
},
{"word": "previewheight",
"menu": "'pvh'     height of the preview window",
"info": "'pvh'     height of the preview window",
},
{"word": "previewwindow",
"menu": "'pvw'     identifies the preview window",
"info": "'pvw'     identifies the preview window",
},
{"word": "printdevice",
"menu": "'pdev'    name of the printer to be used for :hardcopy",
"info": "'pdev'    name of the printer to be used for :hardcopy",
},
{"word": "printencoding",
"menu": "'penc'    encoding to be used for printing",
"info": "'penc'    encoding to be used for printing",
},
{"word": "printexpr",
"menu": "'pexpr'   expression used to print PostScript for :hardcopy",
"info": "'pexpr'   expression used to print PostScript for :hardcopy",
},
{"word": "printfont",
"menu": "'pfn'     name of the font to be used for :hardcopy",
"info": "'pfn'     name of the font to be used for :hardcopy",
},
{"word": "printheader",
"menu": "'pheader' format of the header used for :hardcopy",
"info": "'pheader' format of the header used for :hardcopy",
},
{"word": "printmbcharset",
"menu": "'pmbcs'   CJK character set to be used for :hardcopy",
"info": "'pmbcs'   CJK character set to be used for :hardcopy",
},
{"word": "printmbfont",
"menu": "'pmbfn'   font names to be used for CJK output of :hardcopy",
"info": "'pmbfn'   font names to be used for CJK output of :hardcopy",
},
{"word": "printoptions",
"menu": "'popt'    controls the format of :hardcopy output",
"info": "'popt'    controls the format of :hardcopy output",
},
{"word": "prompt",
"menu": "'prompt'  enable prompt in Ex mode",
"info": "'prompt'  enable prompt in Ex mode",
},
{"word": "pumheight",
"menu": "'ph'	    maximum height of the popup menu",
"info": "'ph'	    maximum height of the popup menu",
},
{"word": "pythondll",
"menu": "name of the Python 2 dynamic library",
"info": "name of the Python 2 dynamic library",
},
{"word": "pythonthreedll",
"menu": "name of the Python 3 dynamic library",
"info": "name of the Python 3 dynamic library",
},
{"word": "pyxversion",
"menu": "'pyx'	    Python version used for pyx* commands",
"info": "'pyx'	    Python version used for pyx* commands",
},
{"word": "quoteescape",
"menu": "'qe'	    escape characters used in a string",
"info": "'qe'	    escape characters used in a string",
},
{"word": "readonly",
"menu": "'ro'	    disallow writing the buffer",
"info": "'ro'	    disallow writing the buffer",
},
{"word": "redrawtime",
"menu": "'rdt'     timeout for 'hlsearch' and |:match| highlighting",
"info": "'rdt'     timeout for 'hlsearch' and |:match| highlighting",
},
{"word": "regexpengine",
"menu": "'re'	    default regexp engine to use",
"info": "'re'	    default regexp engine to use",
},
{"word": "relativenumber",
"menu": "'rnu'	    show relative line number in front of each line",
"info": "'rnu'	    show relative line number in front of each line",
},
{"word": "remap",
"menu": "allow mappings to work recursively",
"info": "allow mappings to work recursively",
},
{"word": "renderoptions",
"menu": "'rop'	    options for text rendering on Windows",
"info": "'rop'	    options for text rendering on Windows",
},
{"word": "report",
"menu": "threshold for reporting nr. of lines changed",
"info": "threshold for reporting nr. of lines changed",
},
{"word": "restorescreen",
"menu": "'rs'	    Win32: restore screen when exiting",
"info": "'rs'	    Win32: restore screen when exiting",
},
{"word": "revins",
"menu": "'ri'	    inserting characters will work backwards",
"info": "'ri'	    inserting characters will work backwards",
},
{"word": "rightleft",
"menu": "'rl'	    window is right-to-left oriented",
"info": "'rl'	    window is right-to-left oriented",
},
{"word": "rightleftcmd",
"menu": "'rlc'     commands for which editing works right-to-left",
"info": "'rlc'     commands for which editing works right-to-left",
},
{"word": "rubydll",
"menu": "name of the Ruby dynamic library",
"info": "name of the Ruby dynamic library",
},
{"word": "ruler",
"menu": "'ru'	    show cursor line and column in the status line",
"info": "'ru'	    show cursor line and column in the status line",
},
{"word": "rulerformat",
"menu": "'ruf'     custom format for the ruler",
"info": "'ruf'     custom format for the ruler",
},
{"word": "runtimepath",
"menu": "'rtp'     list of directories used for runtime files",
"info": "'rtp'     list of directories used for runtime files",
},
{"word": "scroll",
"menu": "'scr'     lines to scroll with CTRL-U and CTRL-D",
"info": "'scr'     lines to scroll with CTRL-U and CTRL-D",
},
{"word": "scrollbind",
"menu": "'scb'     scroll in window as other windows scroll",
"info": "'scb'     scroll in window as other windows scroll",
},
{"word": "scrolljump",
"menu": "'sj'	    minimum number of lines to scroll",
"info": "'sj'	    minimum number of lines to scroll",
},
{"word": "scrolloff",
"menu": "'so'	    minimum nr. of lines above and below cursor",
"info": "'so'	    minimum nr. of lines above and below cursor",
},
{"word": "scrollopt",
"menu": "'sbo'     how 'scrollbind' should behave",
"info": "'sbo'     how 'scrollbind' should behave",
},
{"word": "sections",
"menu": "'sect'    nroff macros that separate sections",
"info": "'sect'    nroff macros that separate sections",
},
{"word": "secure",
"menu": "secure mode for reading .vimrc in current dir",
"info": "secure mode for reading .vimrc in current dir",
},
{"word": "selection",
"menu": "'sel'     what type of selection to use",
"info": "'sel'     what type of selection to use",
},
{"word": "selectmode",
"menu": "'slm'     when to use Select mode instead of Visual mode",
"info": "'slm'     when to use Select mode instead of Visual mode",
},
{"word": "sessionoptions",
"menu": "'ssop'    options for |:mksession|",
"info": "'ssop'    options for |:mksession|",
},
{"word": "shell",
"menu": "'sh'	    name of shell to use for external commands",
"info": "'sh'	    name of shell to use for external commands",
},
{"word": "shellcmdflag",
"menu": "'shcf'    flag to shell to execute one command",
"info": "'shcf'    flag to shell to execute one command",
},
{"word": "shellpipe",
"menu": "'sp'	    string to put output of \":make\" in error file",
"info": "'sp'	    string to put output of \":make\" in error file",
},
{"word": "shellquote",
"menu": "'shq'     quote character(s) for around shell command",
"info": "'shq'     quote character(s) for around shell command",
},
{"word": "shellredir",
"menu": "'srr'     string to put output of filter in a temp file",
"info": "'srr'     string to put output of filter in a temp file",
},
{"word": "shellslash",
"menu": "'ssl'     use forward slash for shell file names",
"info": "'ssl'     use forward slash for shell file names",
},
{"word": "shelltemp",
"menu": "'stmp'    whether to use a temp file for shell commands",
"info": "'stmp'    whether to use a temp file for shell commands",
},
{"word": "shelltype",
"menu": "'st'	    Amiga: influences how to use a shell",
"info": "'st'	    Amiga: influences how to use a shell",
},
{"word": "shellxescape",
"menu": "'sxe'     characters to escape when 'shellxquote' is (",
"info": "'sxe'     characters to escape when 'shellxquote' is (",
},
{"word": "shellxquote",
"menu": "'sxq'     like 'shellquote', but include redirection",
"info": "'sxq'     like 'shellquote', but include redirection",
},
{"word": "shiftround",
"menu": "'sr'	    round indent to multiple of shiftwidth",
"info": "'sr'	    round indent to multiple of shiftwidth",
},
{"word": "shiftwidth",
"menu": "'sw'	    number of spaces to use for (auto)indent step",
"info": "'sw'	    number of spaces to use for (auto)indent step",
},
{"word": "shortmess",
"menu": "'shm'     list of flags, reduce length of messages",
"info": "'shm'     list of flags, reduce length of messages",
},
{"word": "shortname",
"menu": "'sn'	    non-MS-DOS: Filenames assumed to be 8.3 chars",
"info": "'sn'	    non-MS-DOS: Filenames assumed to be 8.3 chars",
},
{"word": "showbreak",
"menu": "'sbr'     string to use at the start of wrapped lines",
"info": "'sbr'     string to use at the start of wrapped lines",
},
{"word": "showcmd",
"menu": "'sc'	    show (partial) command in status line",
"info": "'sc'	    show (partial) command in status line",
},
{"word": "showfulltag",
"menu": "'sft'     show full tag pattern when completing tag",
"info": "'sft'     show full tag pattern when completing tag",
},
{"word": "showmatch",
"menu": "'sm'	    briefly jump to matching bracket if insert one",
"info": "'sm'	    briefly jump to matching bracket if insert one",
},
{"word": "showmode",
"menu": "'smd'     message on status line to show current mode",
"info": "'smd'     message on status line to show current mode",
},
{"word": "showtabline",
"menu": "'stal'    tells when the tab pages line is displayed",
"info": "'stal'    tells when the tab pages line is displayed",
},
{"word": "sidescroll",
"menu": "'ss'	    minimum number of columns to scroll horizontal",
"info": "'ss'	    minimum number of columns to scroll horizontal",
},
{"word": "sidescrolloff",
"menu": "'siso'    min. nr. of columns to left and right of cursor",
"info": "'siso'    min. nr. of columns to left and right of cursor",
},
{"word": "signcolumn",
"menu": "'scl'	    when to display the sign column",
"info": "'scl'	    when to display the sign column",
},
{"word": "smartcase",
"menu": "'scs'     no ignore case when pattern has uppercase",
"info": "'scs'     no ignore case when pattern has uppercase",
},
{"word": "smartindent",
"menu": "'si'	    smart autoindenting for C programs",
"info": "'si'	    smart autoindenting for C programs",
},
{"word": "smarttab",
"menu": "'sta'     use 'shiftwidth' when inserting <Tab>",
"info": "'sta'     use 'shiftwidth' when inserting <Tab>",
},
{"word": "softtabstop",
"menu": "'sts'     number of spaces that <Tab> uses while editing",
"info": "'sts'     number of spaces that <Tab> uses while editing",
},
{"word": "spell",
"menu": "enable spell checking",
"info": "enable spell checking",
},
{"word": "spellcapcheck",
"menu": "'spc'     pattern to locate end of a sentence",
"info": "'spc'     pattern to locate end of a sentence",
},
{"word": "spellfile",
"menu": "'spf'     files where |zg| and |zw| store words",
"info": "'spf'     files where |zg| and |zw| store words",
},
{"word": "spelllang",
"menu": "'spl'     language(s) to do spell checking for",
"info": "'spl'     language(s) to do spell checking for",
},
{"word": "spellsuggest",
"menu": "'sps'     method(s) used to suggest spelling corrections",
"info": "'sps'     method(s) used to suggest spelling corrections",
},
{"word": "splitbelow",
"menu": "'sb'	    new window from split is below the current one",
"info": "'sb'	    new window from split is below the current one",
},
{"word": "splitright",
"menu": "'spr'     new window is put right of the current one",
"info": "'spr'     new window is put right of the current one",
},
{"word": "startofline",
"menu": "'sol'     commands move cursor to first non-blank in line",
"info": "'sol'     commands move cursor to first non-blank in line",
},
{"word": "statusline",
"menu": "'stl'     custom format for the status line",
"info": "'stl'     custom format for the status line",
},
{"word": "suffixes",
"menu": "'su'	    suffixes that are ignored with multiple match",
"info": "'su'	    suffixes that are ignored with multiple match",
},
{"word": "suffixesadd",
"menu": "'sua'     suffixes added when searching for a file",
"info": "'sua'     suffixes added when searching for a file",
},
{"word": "swapfile",
"menu": "'swf'     whether to use a swapfile for a buffer",
"info": "'swf'     whether to use a swapfile for a buffer",
},
{"word": "swapsync",
"menu": "'sws'     how to sync the swap file",
"info": "'sws'     how to sync the swap file",
},
{"word": "switchbuf",
"menu": "'swb'     sets behavior when switching to another buffer",
"info": "'swb'     sets behavior when switching to another buffer",
},
{"word": "synmaxcol",
"menu": "'smc'     maximum column to find syntax items",
"info": "'smc'     maximum column to find syntax items",
},
{"word": "syntax",
"menu": "'syn'     syntax to be loaded for current buffer",
"info": "'syn'     syntax to be loaded for current buffer",
},
{"word": "tabline",
"menu": "'tal'     custom format for the console tab pages line",
"info": "'tal'     custom format for the console tab pages line",
},
{"word": "tabpagemax",
"menu": "'tpm'     maximum number of tab pages for |-p| and \"tab all\"",
"info": "'tpm'     maximum number of tab pages for |-p| and \"tab all\"",
},
{"word": "tabstop",
"menu": "'ts'	    number of spaces that <Tab> in file uses",
"info": "'ts'	    number of spaces that <Tab> in file uses",
},
{"word": "tagbsearch",
"menu": "'tbs'     use binary searching in tags files",
"info": "'tbs'     use binary searching in tags files",
},
{"word": "tagcase",
"menu": "'tc'      how to handle case when searching in tags files",
"info": "'tc'      how to handle case when searching in tags files",
},
{"word": "taglength",
"menu": "'tl'	    number of significant characters for a tag",
"info": "'tl'	    number of significant characters for a tag",
},
{"word": "tagrelative",
"menu": "'tr'	    file names in tag file are relative",
"info": "'tr'	    file names in tag file are relative",
},
{"word": "tags",
"menu": "'tag'     list of file names used by the tag command",
"info": "'tag'     list of file names used by the tag command",
},
{"word": "tagstack",
"menu": "'tgst'    push tags onto the tag stack",
"info": "'tgst'    push tags onto the tag stack",
},
{"word": "tcldll",
"menu": "name of the Tcl dynamic library",
"info": "name of the Tcl dynamic library",
},
{"word": "term",
"menu": "name of the terminal",
"info": "name of the terminal",
},
{"word": "termbidi",
"menu": "'tbidi'   terminal takes care of bi-directionality",
"info": "'tbidi'   terminal takes care of bi-directionality",
},
{"word": "termencoding",
"menu": "'tenc'    character encoding used by the terminal",
"info": "'tenc'    character encoding used by the terminal",
},
{"word": "termguicolors",
"menu": "'tgc'     use GUI colors for the terminal",
"info": "'tgc'     use GUI colors for the terminal",
},
{"word": "termkey",
"menu": "'tk'	    key that precedes a Vim command in a terminal",
"info": "'tk'	    key that precedes a Vim command in a terminal",
},
{"word": "termsize",
"menu": "'tms'	    size of a terminal window",
"info": "'tms'	    size of a terminal window",
},
{"word": "terse",
"menu": "shorten some messages",
"info": "shorten some messages",
},
{"word": "textauto",
"menu": "'ta'	    obsolete, use 'fileformats'",
"info": "'ta'	    obsolete, use 'fileformats'",
},
{"word": "textmode",
"menu": "'tx'	    obsolete, use 'fileformat'",
"info": "'tx'	    obsolete, use 'fileformat'",
},
{"word": "textwidth",
"menu": "'tw'	    maximum width of text that is being inserted",
"info": "'tw'	    maximum width of text that is being inserted",
},
{"word": "thesaurus",
"menu": "'tsr'     list of thesaurus files for keyword completion",
"info": "'tsr'     list of thesaurus files for keyword completion",
},
{"word": "tildeop",
"menu": "'top'     tilde command \"~\" behaves like an operator",
"info": "'top'     tilde command \"~\" behaves like an operator",
},
{"word": "timeout",
"menu": "'to'	    time out on mappings and key codes",
"info": "'to'	    time out on mappings and key codes",
},
{"word": "timeoutlen",
"menu": "'tm'	    time out time in milliseconds",
"info": "'tm'	    time out time in milliseconds",
},
{"word": "title",
"menu": "let Vim set the title of the window",
"info": "let Vim set the title of the window",
},
{"word": "titlelen",
"menu": "percentage of 'columns' used for window title",
"info": "percentage of 'columns' used for window title",
},
{"word": "titleold",
"menu": "old title, restored when exiting",
"info": "old title, restored when exiting",
},
{"word": "titlestring",
"menu": "string to use for the Vim window title",
"info": "string to use for the Vim window title",
},
{"word": "toolbar",
"menu": "'tb'	    GUI: which items to show in the toolbar",
"info": "'tb'	    GUI: which items to show in the toolbar",
},
{"word": "toolbariconsize",
"menu": "'tbis'    size of the toolbar icons (for GTK 2 only)",
"info": "'tbis'    size of the toolbar icons (for GTK 2 only)",
},
{"word": "ttimeout",
"menu": "time out on mappings",
"info": "time out on mappings",
},
{"word": "ttimeoutlen",
"menu": "'ttm'     time out time for key codes in milliseconds",
"info": "'ttm'     time out time for key codes in milliseconds",
},
{"word": "ttybuiltin",
"menu": "'tbi'     use built-in termcap before external termcap",
"info": "'tbi'     use built-in termcap before external termcap",
},
{"word": "ttyfast",
"menu": "'tf'	    indicates a fast terminal connection",
"info": "'tf'	    indicates a fast terminal connection",
},
{"word": "ttymouse",
"menu": "'ttym'    type of mouse codes generated",
"info": "'ttym'    type of mouse codes generated",
},
{"word": "ttyscroll",
"menu": "'tsl'     maximum number of lines for a scroll",
"info": "'tsl'     maximum number of lines for a scroll",
},
{"word": "ttytype",
"menu": "'tty'     alias for 'term'",
"info": "'tty'     alias for 'term'",
},
{"word": "undodir",
"menu": "'udir'    where to store undo files",
"info": "'udir'    where to store undo files",
},
{"word": "undofile",
"menu": "'udf'	    save undo information in a file",
"info": "'udf'	    save undo information in a file",
},
{"word": "undolevels",
"menu": "'ul'	    maximum number of changes that can be undone",
"info": "'ul'	    maximum number of changes that can be undone",
},
{"word": "undoreload",
"menu": "'ur'	    max nr of lines to save for undo on a buffer reload",
"info": "'ur'	    max nr of lines to save for undo on a buffer reload",
},
{"word": "updatecount",
"menu": "'uc'	    after this many characters flush swap file",
"info": "'uc'	    after this many characters flush swap file",
},
{"word": "updatetime",
"menu": "'ut'	    after this many milliseconds flush swap file",
"info": "'ut'	    after this many milliseconds flush swap file",
},
{"word": "verbose",
"menu": "'vbs'     give informative messages",
"info": "'vbs'     give informative messages",
},
{"word": "verbosefile",
"menu": "'vfile'   file to write messages in",
"info": "'vfile'   file to write messages in",
},
{"word": "viewdir",
"menu": "'vdir'    directory where to store files with :mkview",
"info": "'vdir'    directory where to store files with :mkview",
},
{"word": "viewoptions",
"menu": "'vop'     specifies what to save for :mkview",
"info": "'vop'     specifies what to save for :mkview",
},
{"word": "viminfo",
"menu": "'vi'	    use .viminfo file upon startup and exiting",
"info": "'vi'	    use .viminfo file upon startup and exiting",
},
{"word": "viminfofile",
"menu": "'vif'	    file name used for the viminfo file",
"info": "'vif'	    file name used for the viminfo file",
},
{"word": "virtualedit",
"menu": "'ve'	    when to use virtual editing",
"info": "'ve'	    when to use virtual editing",
},
{"word": "visualbell",
"menu": "'vb'	    use visual bell instead of beeping",
"info": "'vb'	    use visual bell instead of beeping",
},
{"word": "warn",
"menu": "warn for shell command when buffer was changed",
"info": "warn for shell command when buffer was changed",
},
{"word": "weirdinvert",
"menu": "'wiv'	    for terminals that have weird inversion method",
"info": "'wiv'	    for terminals that have weird inversion method",
},
{"word": "whichwrap",
"menu": "'ww'	    allow specified keys to cross line boundaries",
"info": "'ww'	    allow specified keys to cross line boundaries",
},
{"word": "wildchar",
"menu": "'wc'	    command-line character for wildcard expansion",
"info": "'wc'	    command-line character for wildcard expansion",
},
{"word": "wildcharm",
"menu": "'wcm'     like 'wildchar' but also works when mapped",
"info": "'wcm'     like 'wildchar' but also works when mapped",
},
{"word": "wildignore",
"menu": "'wig'     files matching these patterns are not completed",
"info": "'wig'     files matching these patterns are not completed",
},
{"word": "wildignorecase",
"menu": "'wic'     ignore case when completing file names",
"info": "'wic'     ignore case when completing file names",
},
{"word": "wildmenu",
"menu": "'wmnu'    use menu for command line completion",
"info": "'wmnu'    use menu for command line completion",
},
{"word": "wildmode",
"menu": "'wim'     mode for 'wildchar' command-line expansion",
"info": "'wim'     mode for 'wildchar' command-line expansion",
},
{"word": "wildoptions",
"menu": "'wop'     specifies how command line completion is done",
"info": "'wop'     specifies how command line completion is done",
},
{"word": "winaltkeys",
"menu": "'wak'     when the windows system handles ALT keys",
"info": "'wak'     when the windows system handles ALT keys",
},
{"word": "window",
"menu": "'wi'	    nr of lines to scroll for CTRL-F and CTRL-B",
"info": "'wi'	    nr of lines to scroll for CTRL-F and CTRL-B",
},
{"word": "winheight",
"menu": "'wh'	    minimum number of lines for the current window",
"info": "'wh'	    minimum number of lines for the current window",
},
{"word": "winfixheight",
"menu": "'wfh'     keep window height when opening/closing windows",
"info": "'wfh'     keep window height when opening/closing windows",
},
{"word": "winfixwidth",
"menu": "'wfw'     keep window width when opening/closing windows",
"info": "'wfw'     keep window width when opening/closing windows",
},
{"word": "winminheight",
"menu": "'wmh'     minimum number of lines for any window",
"info": "'wmh'     minimum number of lines for any window",
},
{"word": "winminwidth",
"menu": "'wmw'     minimal number of columns for any window",
"info": "'wmw'     minimal number of columns for any window",
},
{"word": "winptydll",
"menu": "name of the winpty dynamic library",
"info": "name of the winpty dynamic library",
},
{"word": "winwidth",
"menu": "'wiw'     minimal number of columns for current window",
"info": "'wiw'     minimal number of columns for current window",
},
{"word": "wrap",
"menu": "long lines wrap and continue on the next line",
"info": "long lines wrap and continue on the next line",
},
{"word": "wrapmargin",
"menu": "'wm'	    chars from the right where wrapping starts",
"info": "'wm'	    chars from the right where wrapping starts",
},
{"word": "wrapscan",
"menu": "'ws'	    searches wrap around the end of the file",
"info": "'ws'	    searches wrap around the end of the file",
},
{"word": "write",
"menu": "writing to a file is allowed",
"info": "writing to a file is allowed",
},
{"word": "writeany",
"menu": "'wa'	    write to file with no need for \"!\" override",
"info": "'wa'	    write to file with no need for \"!\" override",
},
{"word": "writebackup",
"menu": "'wb'	    make a backup before overwriting a file",
"info": "'wb'	    make a backup before overwriting a file",
},
{"word": "writedelay",
"menu": "'wd'	    delay this many msec for each char (for debug)",
"info": "'wd'	    delay this many msec for each char (for debug)",
}]